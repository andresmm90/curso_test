"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var uuid = require("uuid/v4");
var matchers_1 = require("./matchers");
var handlers_1 = require("./handlers");
var completion_checkers_1 = require("./completion-checkers");
function serializeRuleData(data) {
    return {
        matchers: data.matchers,
        handler: data.handler,
        completionChecker: data.completionChecker
    };
}
exports.serializeRuleData = serializeRuleData;
;
var MockRule = /** @class */ (function () {
    function MockRule(_a) {
        var matchers = _a.matchers, handler = _a.handler, completionChecker = _a.completionChecker;
        this.id = uuid();
        this.requests = [];
        this.matches = matchers_1.buildMatchers(matchers);
        this.handleRequest = this.recordRequests(handlers_1.buildHandler(handler));
        this.isComplete = completion_checkers_1.buildCompletionChecker(completionChecker);
    }
    // Wrap the handler, to add the request to this.requests when it's done
    MockRule.prototype.recordRequests = function (handler) {
        var thisRule = this;
        var recordRequest = function recordRequest(req, res) {
            return handler.apply(this, arguments).then(function () { return thisRule.requests.push(req); });
        };
        recordRequest.explain = handler.explain;
        return recordRequest;
    };
    MockRule.prototype.explain = function () {
        var explanation = "Match requests " + this.matches.explain.apply(this) + ", " +
            ("and then " + this.handleRequest.explain.apply(this));
        if (this.isComplete) {
            explanation += ", " + this.isComplete.explain.apply(this) + ".";
        }
        else {
            explanation += '.';
        }
        return explanation;
    };
    return MockRule;
}());
exports.MockRule = MockRule;
